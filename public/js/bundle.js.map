{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/app.js","webpack:///./js/nav.js","webpack:///./js/paralax.js","webpack:///./js/rellax.js","webpack:///./js/viewonscroll.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAe;AACS;AACL;;;;;;;;;;;;ACFnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5GA;AACA,eAAe,mBAAO,CAAC,gCAAU;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,IAA0C;AAChD;AACA,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACvB,GAAG,MAAM,EAQN;AACH,CAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,gFAAgF;AAChF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACxZD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/app.js\");\n","import \"./nav\";\nimport \"./viewonscroll\";\nimport \"./paralax\";\n","var no_mobile_from = 840;\nvar add_scrolled_from = 50;\nvar nav_mob = document.querySelector(\".nav--mobile-nav\");\nvar body = document.querySelector(\"body\");\nvar nav = document.querySelector(\"nav\");\n\nif (nav) {\n  var nav_btn = nav.querySelector(\".nav--mobile-btn\");\n  var nav_links = nav.querySelectorAll(\"a\");\n\n  bindEvents();\n\n  function bindEvents() {\n    nav_links.forEach(link => {\n      link.addEventListener(\"click\", () => {\n        closeMobileNav();\n      });\n    });\n    if (nav_btn) {\n      nav_btn.addEventListener(\"click\", e => {\n        toggleNav();\n      });\n    }\n\n    window.addEventListener(\"scroll\", () => {\n      add_scroled_class();\n    });\n    window.addEventListener(\"resize\", () => {\n      close_menu_if_wp_to_big();\n    });\n  }\n\n  function toggleNav() {\n    if (nav_mob.classList.contains(\"nav--open\")) {\n      closeMobileNav();\n    } else {\n      openMobileNav();\n    }\n  }\n\n  function openMobileNav() {\n    nav.classList.remove(\"scrolled\");\n    nav_mob.classList.add(\"nav--open\");\n    nav_btn.classList.add(\"nav--mobile-btn-open\");\n    body.style.overflow = \"hidden\";\n    stopBodyScrolling(true);\n  }\n\n  function closeMobileNav() {\n    body.style.overflow = \"scroll\";\n    stopBodyScrolling(false);\n    nav_mob.classList.remove(\"nav--open\");\n    nav_btn.classList.remove(\"nav--mobile-btn-open\");\n    add_scroled_class();\n  }\n\n  function close_menu_if_wp_to_big() {\n    var w =\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth;\n\n    if (w > no_mobile_from && nav.classList.contains(\"nav--open\")) {\n      closeMobileNav();\n    }\n  }\n\n  var oldY = 0;\n  var scrollLenght = 0;\n  var hidden = false;\n  function add_scroled_class() {\n    var y = window.scrollY;\n    var navClasslist = nav.classList;\n\n    if (y > oldY && !navClasslist.contains(\"nav--scrolled\")) {\n      scrollLenght++;\n      if (scrollLenght > 50) {\n        navClasslist.add(\"nav--scrolled\");\n        scrollLenght = 0;\n      }\n    } else if (y < oldY && navClasslist.contains(\"nav--scrolled\")) {\n      navClasslist.remove(\"nav--scrolled\");\n    }\n\n    if (\n      y > add_scrolled_from &&\n      !navClasslist.contains(\"nav--scrolled-small\")\n    ) {\n      navClasslist.add(\"nav--scrolled-small\");\n    } else if (\n      y < add_scrolled_from &&\n      navClasslist.contains(\"nav--scrolled-small\")\n    ) {\n      navClasslist.remove(\"nav--scrolled-small\");\n    }\n    oldY = y;\n  }\n\n  function stopBodyScrolling(bool) {\n    if (bool === true) {\n      document.body.addEventListener(\"touchmove\", freezeVp, false);\n    } else {\n      document.body.removeEventListener(\"touchmove\", freezeVp, false);\n    }\n  }\n  var freezeVp = function(e) {\n    e.preventDefault();\n  };\n}\n","if (document.querySelector(\".hero-image\")) {\n  const para = require(\"./rellax\");\n  const paralax = new para(\".hero-image\", {\n    speed: -10,\n    center: true,\n\n    round: true,\n    vertical: true,\n    horizontal: false\n  });\n  // module.exports = paralax;\n}\n//\n","// ------------------------------------------\n// Rellax.js\n// Buttery smooth parallax library\n// Copyright (c) 2016 Moe Amaya (@moeamaya)\n// MIT license\n//\n// Thanks to Paraxify.js and Jaime Cabllero\n// for parallax concepts\n// ------------------------------------------\n\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.Rellax = factory();\n  }\n})(this, function() {\n  var Rellax = function(el, options) {\n    \"use strict\";\n\n    var self = Object.create(Rellax.prototype);\n\n    var posY = 0;\n    var screenY = 0;\n    var posX = 0;\n    var screenX = 0;\n    var blocks = [];\n    var stopBlocks = [];\n    var pause = true;\n\n    // check what requestAnimationFrame to use, and if\n    // it's not supported, use the onscroll event\n    var loop =\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      function(callback) {\n        return setTimeout(callback, 1000 / 60);\n      };\n\n    // store the id for later use\n    var loopId = null;\n\n    // check what cancelAnimation method to use\n    var clearLoop =\n      window.cancelAnimationFrame ||\n      window.mozCancelAnimationFrame ||\n      clearTimeout;\n\n    // check which transform property to use\n    var transformProp =\n      window.transformProp ||\n      (function() {\n        var testEl = document.createElement(\"div\");\n        if (testEl.style.transform === null) {\n          var vendors = [\"Webkit\", \"Moz\", \"ms\"];\n          for (var vendor in vendors) {\n            if (testEl.style[vendors[vendor] + \"Transform\"] !== undefined) {\n              return vendors[vendor] + \"Transform\";\n            }\n          }\n        }\n        return \"transform\";\n      })();\n\n    // Default Settings\n    self.options = {\n      speed: -5,\n      center: true,\n      wrapper: null,\n      relativeToWrapper: false,\n      round: true,\n      vertical: true,\n      horizontal: false,\n      callback: function() {}\n    };\n\n    // User defined options (might have more in the future)\n    if (options) {\n      Object.keys(options).forEach(function(key) {\n        self.options[key] = options[key];\n      });\n    }\n\n    // By default, rellax class\n    if (!el) {\n      el = \".rellax\";\n    }\n\n    // check if el is a className or a node\n    var elements =\n      typeof el === \"string\" ? document.querySelectorAll(el) : [el];\n\n    // Now query selector\n    if (elements.length > 0) {\n      self.elems = elements;\n    }\n\n    // The elements don't exist\n    else {\n      throw new Error(\"The elements you're trying to select don't exist.\");\n    }\n\n    // Has a wrapper and it exists\n    if (self.options.wrapper) {\n      if (!self.options.wrapper.nodeType) {\n        var wrapper = document.querySelector(self.options.wrapper);\n\n        if (wrapper) {\n          self.options.wrapper = wrapper;\n        } else {\n          throw new Error(\"The wrapper you're trying to use don't exist.\");\n        }\n      }\n    }\n\n    // Get and cache initial position of all elements\n    var cacheBlocks = function() {\n      for (var i = 0; i < self.elems.length; i++) {\n        var block = createBlock(self.elems[i]);\n        blocks.push(block);\n        stopBlocks.push(true);\n      }\n    };\n\n    // Let's kick this script off\n    // Build array for cached element values\n    var init = function() {\n      for (var i = 0; i < blocks.length; i++) {\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      blocks = [];\n      stopBlocks = [];\n\n      screenY = window.innerHeight;\n      screenX = window.innerWidth;\n      setPosition();\n\n      cacheBlocks();\n\n      // If paused, unpause and set listener for window resizing events\n      if (pause) {\n        window.addEventListener(\"resize\", init);\n        pause = false;\n      }\n      animate();\n    };\n\n    // We want to cache the parallax blocks'\n    // values: base, top, height, speed\n    // el: is dom object, return: el cache values\n    var createBlock = function(el) {\n      var dataPercentage = el.getAttribute(\"data-rellax-percentage\");\n      var dataSpeed = el.getAttribute(\"data-rellax-speed\");\n      var dataZindex = el.getAttribute(\"data-rellax-zindex\") || 0;\n\n      // initializing at scrollY = 0 (top of browser), scrollX = 0 (left of browser)\n      // ensures elements are positioned based on HTML layout.\n      //\n      // If the element has the percentage attribute, the posY and posX needs to be\n      // the current scroll position's value, so that the elements are still positioned based on HTML layout\n      var wrapperPosY = self.options.wrapper\n        ? self.options.wrapper.scrollTop\n        : window.pageYOffset ||\n          document.documentElement.scrollTop ||\n          document.body.scrollTop;\n      // If the option relativeToWrapper is true, use the wrappers offset to top, subtracted from the current page scroll.\n      if (self.options.relativeToWrapper) {\n        var scrollPosY =\n          window.pageYOffset ||\n          document.documentElement.scrollTop ||\n          document.body.scrollTop;\n        wrapperPosY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n      var posY = self.options.vertical\n        ? dataPercentage || self.options.center\n          ? wrapperPosY\n          : 0\n        : 0;\n      var posX = self.options.horizontal\n        ? dataPercentage || self.options.center\n          ? window.pageXOffset ||\n            document.documentElement.scrollLeft ||\n            document.body.scrollLeft\n          : 0\n        : 0;\n\n      var blockTop = posY + el.getBoundingClientRect().top;\n      var blockHeight = el.clientHeight || el.offsetHeight || el.scrollHeight;\n\n      var blockLeft = posX + el.getBoundingClientRect().left;\n      var blockWidth = el.clientWidth || el.offsetWidth || el.scrollWidth;\n\n      // apparently parallax equation everyone uses\n      var percentageY = dataPercentage\n        ? dataPercentage\n        : (posY - blockTop + screenY) / (blockHeight + screenY);\n      var percentageX = dataPercentage\n        ? dataPercentage\n        : (posX - blockLeft + screenX) / (blockWidth + screenX);\n      if (self.options.center) {\n        percentageX = 0.5;\n        percentageY = 0.5;\n      }\n\n      // Optional individual block speed as data attr, otherwise global speed\n      var speed = dataSpeed ? dataSpeed : self.options.speed;\n\n      var bases = updatePosition(percentageX, percentageY, speed);\n\n      // ~~Store non-translate3d transforms~~\n      // Store inline styles and extract transforms\n      var style = el.style.cssText;\n      var transform = \"\";\n\n      // Check if there's an inline styled transform\n      if (style.indexOf(\"transform\") >= 0) {\n        // Get the index of the transform\n        var index = style.indexOf(\"transform\");\n\n        // Trim the style to the transform point and get the following semi-colon index\n        var trimmedStyle = style.slice(index);\n        var delimiter = trimmedStyle.indexOf(\";\");\n\n        // Remove \"transform\" string and save the attribute\n        if (delimiter) {\n          transform =\n            \" \" + trimmedStyle.slice(11, delimiter).replace(/\\s/g, \"\");\n        } else {\n          transform = \" \" + trimmedStyle.slice(11).replace(/\\s/g, \"\");\n        }\n      }\n\n      return {\n        baseX: bases.x,\n        baseY: bases.y,\n        top: blockTop,\n        left: blockLeft,\n        height: blockHeight,\n        width: blockWidth,\n        speed: speed,\n        style: style,\n        transform: transform,\n        zindex: dataZindex\n      };\n    };\n\n    // set scroll position (posY, posX)\n    // side effect method is not ideal, but okay for now\n    // returns true if the scroll changed, false if nothing happened\n    var setPosition = function() {\n      var oldY = posY;\n      var oldX = posX;\n\n      posY = self.options.wrapper\n        ? self.options.wrapper.scrollTop\n        : (\n            document.documentElement ||\n            document.body.parentNode ||\n            document.body\n          ).scrollTop || window.pageYOffset;\n      posX = self.options.wrapper\n        ? self.options.wrapper.scrollLeft\n        : (\n            document.documentElement ||\n            document.body.parentNode ||\n            document.body\n          ).scrollLeft || window.pageXOffset;\n      // If option relativeToWrapper is true, use relative wrapper value instead.\n      if (self.options.relativeToWrapper) {\n        var scrollPosY =\n          (\n            document.documentElement ||\n            document.body.parentNode ||\n            document.body\n          ).scrollTop || window.pageYOffset;\n        posY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n\n      if (oldY != posY && self.options.vertical) {\n        // scroll changed, return true\n        return true;\n      }\n\n      if (oldX != posX && self.options.horizontal) {\n        // scroll changed, return true\n        return true;\n      }\n\n      // scroll did not change\n      return false;\n    };\n\n    // Ahh a pure function, gets new transform value\n    // based on scrollPosition and speed\n    // Allow for decimal pixel values\n    var updatePosition = function(percentageX, percentageY, speed) {\n      var result = {};\n      var valueX = speed * (100 * (1 - percentageX));\n      var valueY = speed * (100 * (1 - percentageY));\n\n      result.x = self.options.round\n        ? Math.round(valueX)\n        : Math.round(valueX * 100) / 100;\n      result.y = self.options.round\n        ? Math.round(valueY)\n        : Math.round(valueY * 100) / 100;\n\n      return result;\n    };\n\n    // Loop\n    var update = function() {\n      if (setPosition() && pause === false) {\n        animate();\n      }\n\n      // loop again\n      loopId = loop(update);\n    };\n\n    // Transform3d on parallax element\n    var animate = function() {\n      var positions;\n      for (var i = 0; i < self.elems.length; i++) {\n        if (stopBlocks[i]) {\n          var percentageY =\n            (posY - blocks[i].top + screenY) / (blocks[i].height + screenY);\n          var percentageX =\n            (posX - blocks[i].left + screenX) / (blocks[i].width + screenX);\n\n          // Subtracting initialize value, so element stays in same spot as HTML\n          positions = updatePosition(percentageX, percentageY, blocks[i].speed); // - blocks[i].baseX;\n          var positionY = positions.y - blocks[i].baseY;\n          var positionX = positions.x - blocks[i].baseX;\n\n          var zindex = blocks[i].zindex;\n\n          // Move that element\n          // (Set the new translation and append initial inline transforms.)\n          var translate =\n            \"translate3d(\" +\n            (self.options.horizontal ? positionX : \"0\") +\n            \"px,\" +\n            (self.options.vertical ? positionY : \"0\") +\n            \"px,\" +\n            zindex +\n            \"px) \" +\n            blocks[i].transform;\n          self.elems[i].style[transformProp] = translate;\n        }\n      }\n      self.options.callback(positions);\n    };\n\n    self.destroy = function() {\n      for (var i = 0; i < self.elems.length; i++) {\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      // Remove resize event listener if not pause, and pause\n      if (!pause) {\n        window.removeEventListener(\"resize\", init);\n        pause = true;\n      }\n\n      // Clear the animation loop to prevent possible memory leak\n      clearLoop(loopId);\n      loopId = null;\n    };\n\n    // Init\n    init();\n\n    // Start the loop\n    update();\n\n    // Allow to recalculate the initial values whenever we want\n    self.refresh = init;\n\n    self.start = function(element) {\n      self.elems.forEach((e, index) => {\n        if (e === element) {\n          stopBlocks[index] = true;\n        }\n      });\n    };\n    self.stop = function(element) {\n      self.elems.forEach((e, index) => {\n        if (e === element) {\n          stopBlocks[index] = false;\n        }\n      });\n    };\n\n    return self;\n  };\n  return Rellax;\n});\n","// function InView() {\n//   let callbacks = [];\n//   let ticking = false;\n\n//   window.addEventListener(\"scroll\", function(e) {\n//     if (!ticking) {\n//       window.requestAnimationFrame(function() {\n//         handlescroll();\n//         ticking = false;\n//       });\n//       ticking = true;\n//     }\n//   });\n\n//   this.subscribe = (selector, fn) => {\n//     let elements = document.querySelectorAll(selector);\n//     callbacks.push([elements, fn]);\n//   };\n\n//   this.initAll = o => {\n//     callbacks.forEach(elements => {\n//       elements[0].forEach(element => {\n//         element.style.opacity = \"0\";\n//       });\n//     });\n//   };\n\n//   this.init = o => {\n//     handlescroll();\n//   };\n\n//   function handlescroll() {\n//     let result = {};\n//     let w = window.innerWidth;\n//     let h = window.innerHeight;\n\n//     callbacks.forEach(e => {\n//       e[0].forEach(element => {\n//         e[1](checkElement(element), element);\n//       });\n\n//       function checkElement(element) {\n//         let bs = element.getBoundingClientRect();\n//         let bottom = h - bs.top;\n//         let top = bs.top + bs.height;\n//         result.inViewport = bottom > 0 && top > 0;\n//         result.visibleComplete = bottom - bs.height > 0 && top - bs.height > 0;\n//         result.inViewportProcent = bottom / (h + bs.height);\n//         result.visibleCompleteProcent =\n//           (bottom - top + (h - bs.height)) / 2 / (h - bs.height);\n//         return result;\n//       }\n//     });\n//   }\n// }\n\n// let inView = new InView();\n\n// inView.subscribe(\".ku-card-pic\", hwatch);\n// inView.initAll(\"0\");\n// inView.init();\n\n// function hwatch(r, e) {\n//   console.log(e);\n//   // if (r.inViewport) {\n//   //   if (r.inViewportProcent > 0.2) {\n//   //     e.classList.add(\"hp-text--wrap-animation\");\n//   //   }\n//   // } else {\n//   //   e.classList.remove(\"hp-text--wrap-animation\");\n//   // }\n// }\n// import InView from \"./inview\";\n// let inView = new InView();\n// inView.subscribe(\"p\", hwatch);\n// function hwatch(r, e) {\n//   if (r.inViewportProcent > 0.2) {\n//     e.style.opacity = \"1\";\n//   } else {\n//     e.style.opacity = \"0\";\n//   }\n// }\n"],"sourceRoot":""}